plugins {
    id 'com.github.ben-manes.versions' version '0.17.0'
    id 'java-library'
    id 'java-gradle-plugin'
    id "com.gradle.plugin-publish" version "0.9.10"
    id 'maven'
}

group = 'com.github.am4dr.gradle'
version = '0.1.1'

ext {
    jdkVersion = JavaVersion.VERSION_1_9
    junit_version = '5.1.0'
    libraries = [
            'junit_api': [
                    'org.junit.jupiter:junit-jupiter-api:'+junit_version,
            ],
            'junit_runtime': [
                    'org.junit.jupiter:junit-jupiter-engine:'+junit_version,
            ]
    ]
    targetJarNames = ['unnamed', 'autonamed', 'named']
    targetSampleVersion = '1.1'
}

allprojects {
    sourceCompatibility = jdkVersion
    targetCompatibility = jdkVersion

    repositories {
        mavenLocal()
        jcenter()
    }
}

dependencies {
    implementation gradleApi()

    testImplementation gradleTestKit()
    testImplementation libraries.junit_api
    testRuntime libraries.junit_runtime
}

project(':targetJars') {
    apply plugin: 'java-library'
    apply plugin: 'maven'

    group = "com.github.am4dr.gradle.java-modularize-plugin"
    version = targetSampleVersion
    archivesBaseName = "test-target-sample"

    targetJarNames.each { name ->
        sourceSets.create(name) {}
        configurations.create(name)
    }
    def jarTaskNamer = { name -> "${name}Jar" }
    targetJarNames.each { String name ->
        def jarTaskName = jarTaskNamer(name)
        def jarTask = tasks.create(jarTaskName, Jar) { Jar jar ->
            jar.classifier = name
            jar.from sourceSets.getByName(name).output
        }
        artifacts.add(name, jarTask)
        artifacts.add("archives", jarTask)
    }
    tasks.getByName(jarTaskNamer("autonamed")) { Jar task ->
        task.manifest { m ->
            m.attributes.put('Automatic-Module-Name', 'sample.autonamed')
        }
    }
}
project(':dependentJar') {
    apply plugin: 'java-library'
    apply plugin: 'maven'

    group = "com.github.am4dr.gradle.java-modularize-plugin"
    version = targetSampleVersion
    archivesBaseName = "test-dependent-target-sample"

    dependencies {
        api "$group:test-target-sample:$targetSampleVersion:unnamed"
    }
    compileJava {
        dependsOn ":targetJars:install"
    }
}

sourceSets {
    test {
        resources {
            srcDirs = ['src/test/resources', 'targetJars/build/libs', 'dependentJar/build/libs']
        }
    }
}
processTestResources {
    dependsOn(targetJarNames.collect { name -> ":targetJars:${name}Jar" })
    dependsOn ':dependentJar:jar'
}
test {
    dependsOn ":targetJars:install", ":dependentJar:install"
    useJUnitPlatform()
}
pluginBundle {
    website = 'https://github.com/am4dr/gradle-java-modularize-plugin'
    vcsUrl = 'https://github.com/am4dr/gradle-java-modularize-plugin'
    description = 'module-info.class generation and injection'
    tags = ['jigsaw', 'modules']

    plugins {
        modularizePlugin {
            id = 'com.github.am4dr.java-modularize'
            displayName = 'Gradle Java Modularize Plugin'
        }
    }
}